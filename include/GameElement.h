#include "Element.h"

#include <memory>
#include <SDL2_image/SDL_image.h>

#ifndef GAMEELEMENT_H
#define GAMEELEMENT_H

//gameEngine::Session session;

namespace gameEngine
{

  class GameElement : public Element
  {

  public:
    static std::shared_ptr<GameElement> getInstance(int x, int y, int w, int h, const char *imgSrc);
    GameElement(int x, int y, int w, int h, const char *imgSrc);    

    // Virtuell funktion som kan definieras av subklasserna
    // Uppdaterar objektets tillst√•nd
    virtual void tick(){};

    virtual void collide(){};
    
    void setIsUserControlled() {
      userControlled = true;
    };

    bool isUserControlled() {
      return userControlled;
    };

    void setPoints(int p) {
      points = p;
    }


    int getPoints() {
      return points;
    }

    void setAutogenerated() {
      autogenerated = true;
    } 

    bool isAutogenerated() {
      return autogenerated;
    }

    bool isInsideWindow();

  protected:
    const char *imageSource;
    bool userControlled;
    bool autogenerated;
    int points = 0;
    
  };
}

#endif